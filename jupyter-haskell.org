#+TITLE: Jupyter Haskell
#+AUTHOR: GTrunSec
#+EMAIL: gtrunsec@hardenedlinux.org
#+DATE: 2020-11-28 Sat
#+SETUPFILE: ./hugo.setup
#+SETUPFILE: ./theme-readtheorg.setup
#+OPTIONS:   H:3 num:t toc:t \n:nil @:t ::t |:t ^:nil -:t f:t *:t <:t

- tags :: [[file:Jupyter-data-science.org][Jupyter Data Science]], [[file:my-haskell.org][Haskell (programming language)]]


* Jupter Notebook Programming in Haskel
:PROPERTIES:
:ID:       6438c7d9-22f2-4aff-9c68-3ac5f5b7caab
:END:
- [2020-10-29 Thu 18:28] -> [[id:99679afb-8873-409e-9d4b-2b6a6d3b4fc2][Programming in Haskell]]
** Chapter 1
#+begin_src ein :session localhost :exports both

#+end_src

#+NAME: 04a67be7-62e0-4865-a46e-d2fd38743400
#+begin_src ein-haskell :session localhost :exports both
let pair = (2, "orange")
#+end_src

#+RESULTS: 04a67be7-62e0-4865-a46e-d2fd38743400


#+NAME: 3945a629-cafb-4b58-be8a-6b07f91aa96d
#+begin_src ein-haskell :session localhost :exports both
pair
#+end_src

#+RESULTS: 3945a629-cafb-4b58-be8a-6b07f91aa96d
: orange

#+NAME: 93b73bda-ab8e-47dd-a31f-3d0c8364b6bf
#+begin_src ein-haskell :session localhost :exports both
1:[2,3,4]
#+end_src

#+RESULTS: 93b73bda-ab8e-47dd-a31f-3d0c8364b6bf
: [1,2,3,4]




** Chapter 2
-- Hanoi
#+begin_src haskell :session localhost :exports both
hanoiN :: Integer -> [Peg] -> [Move]
hanoiN 0 _ = []
hanoiN 1 (p1 : p2 : rest) = [(p1, p2)]
hanoiN n (p1 : p2 : p3 : rest) =
    hanoiN k (p1 : p3 : p2 : rest) ++
    hanoiN (n - k) (p1 : p2 : rest) ++
    hanoiN k (p3 : p2 : p1 : rest)
    where k = if null rest then n - 1 else n `quot` 2
hanoiN _ _ = error "Invalid configuration"
#+end_src




* Org-mode Haskell

** Main print
#+begin_src haskell :exports both :results output
main = System.Environment.getArgs >>= print
  :main abc xyz
#+end_src

#+RESULTS:
:
: ["abc","xyz"]
* diagrams-gallery -> [[file:Jupyter-data-science.org][Jupyter Data Science]]
- [[https://github.com/Yvee1/jupyter/blob/master/Haskell/diagrams-gallery/Gray.ipynb][jupyter/Gray.ipynb at master Â· Yvee1/jupyter]] -> [[file:my-haskell.org][Haskell (programming language)]]



#+begin_src C++ :exports both :results output
// C++ implementation to find the sum of
// nodes of the Linked List
#include <bits/stdc++.h>
using namespace std;

/* A Linked list node */
struct Node {
    int data;
    struct Node* next;
};

// function to insert a node at the
// beginning of the linked list
void push(struct Node** head_ref, int new_data)
{
    /* allocate node */
    struct Node* new_node = new Node;

    /* put in the data */
    new_node->data = new_data;

    /* link the old list to the new node */
    new_node->next = (*head_ref);

    /* move the head to point to the new node */
    (*head_ref) = new_node;
}

// function to recursively find the sum of
// nodes of the given linked list
void sumOfNodes(struct Node* head, int* sum)
{
    // if head = NULL
    if (!head)
        return;

    // recursively traverse the remaining nodes
    sumOfNodes(head->next, sum);

    // accumulate sum
    *sum = *sum + head->data;
}

// utility function to find the sum of  nodes
int sumOfNodesUtil(struct Node* head)
{

    int sum = 0;

    // find the sum of  nodes
    sumOfNodes(head, &sum);

    // required sum
    return sum;
}

// Driver program to test above
int main()
{
    struct Node* head = NULL;

    // create linked list 7->6->8->4->1
    push(&head, 7);
    push(&head, 6);
    push(&head, 8);
    push(&head, 4);
    push(&head, 1);

    cout << "Sum of nodes = "
         << sumOfNodesUtil(head);
    return 0;
}
#+end_src

#+RESULTS:
: Sum of nodes = 26
